long = long[as.vector(matrix(1:104,nrow=4,byrow=T)),]
long
long['age'] = rep(c(8,10,12,14),26)
long
gee1temp <- geem(value~I(age-8)*male, id=id, data=long, corstr="ar1")
gee1temp
vars
unique(vars)
length(unique(vars))
long['bootID'] = rep(1:26,each=4)
long
gee1temp <- geem(value~I(age-8)*male, id=bootID, data=long, corstr="ar1")
gee1temp
gee1temp$beta[1]
gee1temp$beta[2]
gee1temp$beta[3]
gee1temp$beta[4]
wide
set.seed(1)
for(i in 1:27)
{
start = (i-1)*4+1
d4temp <- d4blind[-c(start:(start+3)),]
wide <- reshape(d4temp,timevar="age",idvar=c("Subject","Sex","id","male","blind"),dir="wide")
for(b in 1:B)
{
vars = sample(1:26,size=26,replace=TRUE)
boot = wide[vars,]
long = melt(boot,id.vars=c("Subject","Sex","id","male","blind"),
measure.vars=c("distance.8","distance.10","distance.12","distance.14"))
long = long[as.vector(matrix(1:104,nrow=4,byrow=T)),]
long['age'] = rep(c(8,10,12,14),26)
long['bootID'] = rep(1:26,each=4)
gee1temp <- geem(value~I(age-8)*male, id=bootID, data=long, corstr="ar1")
beta0[b,i] = gee1temp$beta[1]
beta1[b,i] = gee1temp$beta[2]
beta2[b,i] = gee1temp$beta[3]
beta3[b,i] = gee1temp$beta[4]
}
}
beta0 <- matrix(0,nrow=B,ncol=27)
beta1 <- matrix(0,nrow=B,ncol=27)
beta2 <- matrix(0,nrow=B,ncol=27)
beta3 <- matrix(0,nrow=B,ncol=27)
B=10^3
d4blind <- d4
d4blind['blind']=rep(seq(1:27),each=4)
d4blind['blind']=rep(seq(1:27),each=4) #just give me the 27 kids
set.seed(1)
for(i in 1:27)
{
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
wide <- reshape(d4temp,timevar="age",
idvar=c("Subject","Sex","id","male","blind"),dir="wide")
for(b in 1:B)
{
vars = sample(1:26,size=26,replace=TRUE) #indices to use in bootstrap GEE
boot = wide[vars,] #grab those kids from the WIDE data frame
long = melt(boot,id.vars=c("Subject","Sex","id","male","blind"),
measure.vars=c("distance.8","distance.10","distance.12","distance.14"))
long = long[as.vector(matrix(1:104,nrow=4,byrow=T)),]
long['age'] = rep(c(8,10,12,14),26)
long['bootID'] = rep(1:26,each=4) #have to include this otherwise multiple kids appearing won't be distinguished in GEE
gee1temp <- geem(value~I(age-8)*male, id=bootID, data=long, corstr="ar1")
beta0[b,i] = gee1temp$beta[1]
beta1[b,i] = gee1temp$beta[2]
beta2[b,i] = gee1temp$beta[3]
beta3[b,i] = gee1temp$beta[4]
}
}
beta0s
B=10
beta0 <- matrix(0,nrow=B,ncol=27)
beta1 <- matrix(0,nrow=B,ncol=27)
beta2 <- matrix(0,nrow=B,ncol=27)
beta3 <- matrix(0,nrow=B,ncol=27)
d4blind <- d4
d4blind['blind']=rep(seq(1:27),each=4) #just give me the 27 kids
set.seed(1)
for(i in 1:27)
{
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
wide <- reshape(d4temp,timevar="age",
idvar=c("Subject","Sex","id","male","blind"),dir="wide")
for(b in 1:B)
{
vars = sample(1:26,size=26,replace=TRUE) #indices to use in bootstrap GEE
boot = wide[vars,] #grab those kids from the WIDE data frame
long = melt(boot,id.vars=c("Subject","Sex","id","male","blind"),
measure.vars=c("distance.8","distance.10","distance.12","distance.14"))
long = long[as.vector(matrix(1:104,nrow=4,byrow=T)),]
long['age'] = rep(c(8,10,12,14),26)
long['bootID'] = rep(1:26,each=4) #have to include this otherwise multiple kids appearing won't be distinguished in GEE
gee1temp <- geem(value~I(age-8)*male, id=bootID, data=long, corstr="ar1")
beta0[b,i] = gee1temp$beta[1]
beta1[b,i] = gee1temp$beta[2]
beta2[b,i] = gee1temp$beta[3]
beta3[b,i] = gee1temp$beta[4]
}
}
beta0
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
d4temp
geetemp1 <- geem(value~I(age-8)*male, id=id, data=d4temp, corstr="ar1")
geetemp1 <- geem(distance~I(age-8)*male, id=id, data=d4temp, corstr="ar1")
geetemp1
geetemp1$beta
sumamry(geetemp1)
summary(geetemp1)
blah = summary(geetemp1)
blah$se.robust
blah$beta
20.86+1.96*c(-1,1)*0.5409
?plotCI
library(plotrix)
?abline
?segments
segments(x0=c(1,1),y0=c(1,2))
segments(x0=1,y0=1,x1=1,y1=2)
plot(dist,speed)
plot(mtcars$dist,mtcars$speed)
cars$dist
plottcars$dist,cars$speed)
plot(cars$dist,cars$speed)
segments(x0=20,y0=5,x1=20,y1=10)
CIbeta0s <- matrix(0,nrow=2,ncol=27)
betas <- matrix(0,nrow=4,ncol=27)
CIbeta0s <- matrix(0,nrow=2,ncol=27)
summary(geetemp1)$se.robust*1.96*c(-1,1)+summary(geetemp1)$beta
summary(geetemp1)$se.robust*1.96*c(-1,1)
summary(geetemp1)$se.robust
summary(geetemp1)$se.robust*1.96
summary(geetemp1)$se.robust[1]*1.96*c(-1,1)
d4blind <- d4
d4blind['blind']=rep(seq(1:27),each=4) #just give me the 27 kids
betas <- matrix(0,nrow=4,ncol=27)
CIbeta0s <- matrix(0,nrow=2,ncol=27)
for(i in 1:27)
{
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
geetemp1 <- geem(distance~I(age-8)*male, id=id, data=d4temp, corstr="ar1")
betas[,i] = summary(geetemp1)$beta
CIbeta0s[,i] = summary(geetemp1)$se.robust[1]*1.96*c(-1,1)+betas[1,i]
}
CIbeta0s
betas
plot(1:27,betas[1,])
betas
CIbeta0s
CIbeta0s[,1]
segments(c(1,CIbeta0s[1,1]),c(1,CIbeta0s[2,1]))
segments(x0=1,y0=CIbeta0s[1,1],x1=1,y1=CIbeta0s[2,1])
plot(1:27,betas[1,],ylim=c(19,23))
segments(x0=1,y0=CIbeta0s[1,1],x1=1,y1=CIbeta0s[2,1])
plot(1:27,betas[1,],ylim=c(19,23))
plot(1:27,betas[1,],ylim=c(19,23))
for(i in 1:27)
{
segments(x0=1,y0=CIbeta0s[1,i],x1=1,y1=CIbeta0s[2,i])
}
i
plot(1:27,betas[1,],ylim=c(19,23))
i=1
segments(x0=1,y0=CIbeta0s[1,i],x1=1,y1=CIbeta0s[2,i])
i=2
segments(x0=1,y0=CIbeta0s[1,i],x1=1,y1=CIbeta0s[2,i])
plot(1:27,betas[1,],ylim=c(19,23))
segments(x0=1,y0=CIbeta0s[1,i],x1=1,y1=CIbeta0s[2,i])
plot(1:27,betas[1,],ylim=c(19,23))
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
plot(1:27,betas[1,],ylim=c(19,23),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
CIbeta1s <- matrix(0,nrow=2,ncol=27)
CIbeta2s <- matrix(0,nrow=2,ncol=27)
CIbeta3s <- matrix(0,nrow=2,ncol=27)
d4blind <- d4
d4blind['blind']=rep(seq(1:27),each=4) #just give me the 27 kids
betas <- matrix(0,nrow=4,ncol=27)
CIbeta0s <- matrix(0,nrow=2,ncol=27)
CIbeta1s <- matrix(0,nrow=2,ncol=27)
CIbeta2s <- matrix(0,nrow=2,ncol=27)
CIbeta3s <- matrix(0,nrow=2,ncol=27)
for(i in 1:27)
{
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
geetemp1 <- geem(distance~I(age-8)*male, id=id, data=d4temp, corstr="ar1")
betas[,i] = summary(geetemp1)$beta
CIbeta0s[,i] = summary(geetemp1)$se.robust[1]*1.96*c(-1,1)+betas[1,i]
CIbeta1s[,i] = summary(geetemp1)$se.robust[2]*1.96*c(-1,1)+betas[2,i]
CIbeta2s[,i] = summary(geetemp1)$se.robust[3]*1.96*c(-1,1)+betas[3,i]
CIbeta3s[,i] = summary(geetemp1)$se.robust[4]*1.96*c(-1,1)+betas[4,i]
}
plot(1:27,betas[1,],ylim=c(19,23),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
plot(1:27,betas[2,],ylim=c(19,23),col="red",pch=20)
plot(1:27,betas[2,],col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta1s[1,i],x1=i,y1=CIbeta1s[2,i])
}
CIbeta1s
beta1s
CIbeta1s
betas
hist(betas[2,])
plot(1:27,betas[2,],col="red",pch=20)
plot(1:27,betas[3,],ylim=c(19,23),col="red",pch=20)
plot(1:27,betas[3,],col="red",pch=20)
plot(1:27,betas[4,],col="red",pch=20)
plot(1:27,betas[2,],col="red",pch=20)
betas[2,]
CIbeta1s
plot(1:27,betas[2,],ylim=c(0.3,0.7),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta1s[1,i],x1=i,y1=CIbeta1s[2,i])
}
betas[3,]
CIbeta2s
plot(1:27,betas[3,],ylim=c(-0.5,3.5),col="red",pch=20)
for(i in 1:27)
plot(1:27,betas[3,],ylim=c(-0.5,3.5),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta2s[1,i],x1=i,y1=CIbeta2s[2,i])
}
betas[4,]
CIbeta3s
plot(1:27,betas[4,],col="red",ylim=c(0,0.6),pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
plot(1:27,betas[4,],col="red",ylim=c(0,0.6),pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta3s[1,i],x1=i,y1=CIbeta3s[2,i])
}
plot(1:27,betas[3,],ylim=c(-0.5,3.5),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta2s[1,i],x1=i,y1=CIbeta2s[2,i])
}
plot(1:27,betas[2,],ylim=c(0.3,0.7),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta1s[1,i],x1=i,y1=CIbeta1s[2,i])
}
plot(1:27,betas[1,],ylim=c(19,23),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
hist(betas[1,])
hist(betas[2,])
hist(betas[3,])
B=1000
beta0 <- matrix(0,nrow=B,ncol=27)
beta1 <- matrix(0,nrow=B,ncol=27)
beta2 <- matrix(0,nrow=B,ncol=27)
beta3 <- matrix(0,nrow=B,ncol=27)
d4blind <- d4
d4blind['blind']=rep(seq(1:27),each=4) #just give me the 27 kids
set.seed(1)
for(i in 1:27)
{
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
wide <- reshape(d4temp,timevar="age",
idvar=c("Subject","Sex","id","male","blind"),dir="wide")
for(b in 1:B)
{
vars = sample(1:26,size=26,replace=TRUE) #indices to use in bootstrap GEE
boot = wide[vars,] #grab those kids from the WIDE data frame
long = melt(boot,id.vars=c("Subject","Sex","id","male","blind"),
measure.vars=c("distance.8","distance.10","distance.12","distance.14"))
long = long[as.vector(matrix(1:104,nrow=4,byrow=T)),]
long['age'] = rep(c(8,10,12,14),26)
long['bootID'] = rep(1:26,each=4) #have to include this otherwise multiple kids appearing won't be distinguished in GEE
gee1temp <- geem(value~I(age-8)*male, id=bootID, data=long, corstr="ar1")
beta0[b,i] = gee1temp$beta[1]
beta1[b,i] = gee1temp$beta[2]
beta2[b,i] = gee1temp$beta[3]
beta3[b,i] = gee1temp$beta[4]
}
}
boxplot(beta0[,1])
boxplot(beta0[,2])
boxplot(beta0[,3])
beta0
hist(beta1[,1])
hist(beta1[,2])
hist(beta1[,3])
hist(beta1[,4])
as.vector(beta1)
as.vector(beta1)[1001]
beta1[,2]
beta1LOOdf <- data.frame(as.vector(beta1),rep(1:27,each=1000))
names(beta1LOOdf) <- c("beta1", "leftOut")
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(beta1))
ggplot(beta1LOOdf, aes(beta1,facet_grid(leftOut~.)))
ggplot(beta1LOOdf, aes(beta1,facet_grid(leftOut~.)))
ggplot(beta1LOOdf, aes(beta1,fill=leftOut))
ggplot(beta1LOOdf, aes(beta1,fill=leftOut)) + geom_boxplot()
head(beta1LOOdf)
?facet_grid
ggplot(beta1LOOdf, aes(beta1,col=leftOut)) + facet_grid(leftOut~.) + geom_boxplot()
ggplot(beta1LOOdf, aes(beta1,col=leftOut)) + geom_boxplot(aes(fill="leftOut"))
ggplot(beta1LOOdf, aes(beta1) + geom_boxplot(aes(fill="leftOut"))
ggplot(beta1LOOdf, aes(beta1)) + geom_boxplot(aes(fill="leftOut"))
ggplot(beta1LOOdf, aes(beta1)) + geom_boxplot(aes(fill=leftOut))
beta1LOOdf <- data.frame(as.vector(beta1),as.factor(rep(1:27,each=1000)))
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(beta1)) + geom_boxplot(aes(fill="leftOut"))
ggplot(beta1LOOdf, aes(beta1)) + geom_boxplot(aes(fill=leftOut))
beta1LOOdf <- data.frame(as.vector(beta1),rep(1:27,each=1000))
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(x=leftOut, y=beta1)) + geom_boxplot()
beta1LOOdf <- data.frame(as.vector(beta1),rep(1:27,each=1000))
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(x=leftOut, y=beta1)) + geom_boxplot()
head(beta1LOOdf)
ggplot(beta1LOOdf, aes(x=leftOut, y=beta1,fill=leftOut)) + geom_boxplot()
beta1LOOdf <- data.frame(as.vector(beta1),as.factor(rep(1:27,each=1000)))
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(x=leftOut, y=beta1, fill=leftOut)) + geom_boxplot()
beta0LOOdf <- data.frame(as.vector(beta0),as.factor(rep(1:27,each=1000)))
names(beta0LOOdf) <- c("beta0", "leftOut")
ggplot(beta0LOOdf, aes(x=leftOut, y=beta1, fill=leftOut)) + geom_boxplot()
beta1LOOdf <- data.frame(as.vector(beta1),as.factor(rep(1:27,each=1000)))
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(x=leftOut, y=beta1, fill=leftOut)) + geom_boxplot()
beta0LOOdf <- data.frame(as.vector(beta0),as.factor(rep(1:27,each=1000)))
names(beta0LOOdf) <- c("beta0", "leftOut")
ggplot(beta0LOOdf, aes(x=leftOut, y=beta0, fill=leftOut)) + geom_boxplot()
beta2LOOdf <- data.frame(as.vector(beta2),as.factor(rep(1:27,each=1000)))
names(beta2LOOdf) <- c("beta2", "leftOut")
ggplot(beta2LOOdf, aes(x=leftOut, y=beta2, fill=leftOut)) + geom_boxplot()
beta3LOOdf <- data.frame(as.vector(beta3),as.factor(rep(1:27,each=1000)))
names(beta3LOOdf) <- c("beta3", "leftOut")
ggplot(beta3LOOdf, aes(x=leftOut, y=beta3, fill=leftOut)) + geom_boxplot()
#use GEE to get intervals with the cluster left out
d4blind <- d4
d4blind['blind']=rep(seq(1:27),each=4) #just give me the 27 kids
betas <- matrix(0,nrow=4,ncol=27)
CIbeta0s <- matrix(0,nrow=2,ncol=27)
CIbeta1s <- matrix(0,nrow=2,ncol=27)
CIbeta2s <- matrix(0,nrow=2,ncol=27)
CIbeta3s <- matrix(0,nrow=2,ncol=27)
for(i in 1:27)
{
start = (i-1)*4+1 #grab the starting index to leave one out
d4temp <- d4blind[-c(start:(start+3)),] #give me the data frame w/o that kiddo
geetemp1 <- geem(distance~I(age-8)*male, id=id, data=d4temp, corstr="ar1")
betas[,i] = summary(geetemp1)$beta
CIbeta0s[,i] = summary(geetemp1)$se.robust[1]*1.96*c(-1,1)+betas[1,i]
CIbeta1s[,i] = summary(geetemp1)$se.robust[2]*1.96*c(-1,1)+betas[2,i]
CIbeta2s[,i] = summary(geetemp1)$se.robust[3]*1.96*c(-1,1)+betas[3,i]
CIbeta3s[,i] = summary(geetemp1)$se.robust[4]*1.96*c(-1,1)+betas[4,i]
}
plot(1:27,betas[1,],ylim=c(19,23),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
plot(1:27,betas[2,],ylim=c(0.3,0.7),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta1s[1,i],x1=i,y1=CIbeta1s[2,i])
}
plot(1:27,betas[3,],ylim=c(-0.5,3.5),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta2s[1,i],x1=i,y1=CIbeta2s[2,i])
}
plot(1:27,betas[4,],col="red",ylim=c(0,0.6),pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta3s[1,i],x1=i,y1=CIbeta3s[2,i])
}
beta3LOOdf <- data.frame(as.vector(beta3),as.factor(rep(1:27,each=1000)))
names(beta3LOOdf) <- c("beta3", "leftOut")
ggplot(beta3LOOdf, aes(x=leftOut, y=beta3, fill=leftOut)) + geom_boxplot()
plot(1:27,betas[3,],ylim=c(-0.5,3.5),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta2s[1,i],x1=i,y1=CIbeta2s[2,i])
}
plot(1:27,betas[2,],ylim=c(0.3,0.7),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta1s[1,i],x1=i,y1=CIbeta1s[2,i])
}
plot(1:27,betas[1,],ylim=c(19,23),col="red",pch=20)
for(i in 1:27)
{
segments(x0=i,y0=CIbeta0s[1,i],x1=i,y1=CIbeta0s[2,i])
}
beta1LOOdf <- data.frame(as.vector(beta1),as.factor(rep(1:27,each=1000)))
names(beta1LOOdf) <- c("beta1", "leftOut")
ggplot(beta1LOOdf, aes(x=leftOut, y=beta1, fill=leftOut)) + geom_boxplot()
beta0LOOdf <- data.frame(as.vector(beta0),as.factor(rep(1:27,each=1000)))
names(beta0LOOdf) <- c("beta0", "leftOut")
ggplot(beta0LOOdf, aes(x=leftOut, y=beta0, fill=leftOut)) + geom_boxplot()
gee1 <- geem(distance~I(age-8)*male, id=id, data=d4, corstr="ar1")
phiAR1 <- gee1$phi
betaAR1 <- gee1$beta
d4DiagAR1 = d4
d4DiagAR1['subject9'] = c(rep("blue",32),rep("black",4),rep("blue",28),rep("magenta",44))
d4DiagAR1['resid'] = phiAR1^(-1/2)*(d4$distance - X%*%betaAR1)
d4DiagAR1['fitted'] = X%*%betaAR1
plot(d4DiagAR1$fitted,jitter(d4DiagAR1$resid,amount=0.05),xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=d4DiagAR1$subject9,pch=20)
lines(lowess(fitted.values(gee1),pearsonResidAR1,iter=0),col="green")
phiExch <- gee2$phi
betaExch <- gee2$beta
pearsonResidExch = phiExch^(-1/2)*(d4$distance - X%*%betaExch)
plot(fitted.values(gee2),pearsonResidExch,xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("black",32),rep("red",4),rep("black",28),rep("black",44)),pch=20,
ylim=c(-3,3))
lines(lowess(fitted.values(gee2),pearsonResidExch,iter=0),col="green")
plot(fitted.values(gee2),jitter(pearsonResidExch,amount=0.05),xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("black",32),rep("red",4),rep("black",28),rep("black",44)),pch=20,
ylim=c(-3,3))
lines(lowess(fitted.values(gee2),pearsonResidExch,iter=0),col="green")
plot(fitted.values(gee2),pearsonResidExch^2,xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20,
ylim=c(-3,3))
lines(lowess(fitted.values(gee2),pearsonResidExch,iter=0),col="green")
plot(fitted.values(gee2),pearsonResidExch^2,xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20)
lines(lowess(fitted.values(gee2),pearsonResidExch,iter=0),col="green")
plot(fitted.values(gee2),pearsonResidExch^2,xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20)
lines(lowess(fitted.values(gee2),pearsonResidExch,iter=0),col="green")
lines(lowess(fitted.values(gee2),pearsonResidExch^2,iter=0),col="green")
plot(fitted.values(gee2),pearsonResidExch^2,xlab="Fitted Values (Distance)",
ylab="Pearson Residuals",
main="Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20)
lines(lowess(fitted.values(gee2),pearsonResidExch^2,iter=0),col="green")
plot(fitted.values(gee2),pearsonResidExch^2,xlab="Fitted Values (Distance)",
ylab="Squared Pearson Residuals",
main="Squared Pearson Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20)
lines(lowess(fitted.values(gee2),pearsonResidExch^2,iter=0),col="green")
plot(fitted.values(gee2),pearsonResidExch^2,xlab="Fitted Values (Distance)",
ylab="Squared Pearson Residuals",
main="Squared P. Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20)
lines(lowess(fitted.values(gee2),pearsonResidExch^2,iter=0),col="green")
plot(fitted.values(gee1),pearsonResidAR1^2,xlab="Fitted Values (Distance)",
ylab="Squared Pearson Residuals",
main="Squared P. Residuals vs Fitted Values With Lowess iter=0",
col=c(rep("blue",64),rep("magenta",44)),pch=20)
lines(lowess(fitted.values(gee1),pearsonResidAR1^2,iter=0),col="green")
plot(pearsonResidExch[-108],pearsonResidExch[-1])
gee2$alpha
abline(a=0,b=gee2$alpha)
plot(pearsonResidAR1[-108],pearsonResidAR1[-1])
abline(a=0,b=gee1$alpha)
plot(fitted.values(gee1),pearsonResidAR1^2,xlab="Fitted Values (Distance)",
ylab="Squared Pearson Residuals",
pearsonResidExch
pearsonResidExch[-108]
cbind(pearsonResidExch[-108],pearsonResid[-1])
107 %% 4
107/4
26*107
26*4
seq(4,104,4)
unitLagExch = cbind(pearsonResidExch[-108],pearsonResidExch[-1])
unitLagExch[-seq(4,104,4)] = unitLagExch
unitLagExch[-seq(4,104,4)]
unitLagExch[-seq(4,104,4),]
unitLagExch[-seq(4,104,4),] = unitLagExch
unitLagExch[-seq(4,104,4),]
unitLagExch = unitLagExch[-seq(4,104,4),]
plot(unitLagExch)
abline(a=0,b=gee2$alpha)
#variance
unitLagAR1 = cbind(pearsonResidAR1[-108],pearsonResidAR1[-1])
unitLagAR1 = unitLagAR1[-seq(4,104,4),]
plot(unitLagAR1)
abline(a=0,b=gee1$alpha)
